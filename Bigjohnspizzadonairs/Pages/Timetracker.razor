@page "/time-tracker"
@inject DbmaManager dbManager
@inject NavigationManager nav
@using Bigjohnspizzadonairs.Data

<div class="container mx-auto bg-gray-100">
    <div class="flex justify-center items-center h-screen">
        <div class="bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 flex flex-col w-full max-w-lg">
            <div class="mb-4">
                <h1 class="text-gray-900 font-bold text-2xl">Welcome to Time Tracker</h1>
                <p class="text-gray-700">Efficiently manage your working hours</p>
            </div>

            <div class="mb-6">
                <label class="block text-gray-700 text-sm font-bold mb-2" for="user-id">
                    User ID
                </label>
                <input @bind="userId" class="shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline" id="user-id" type="text" placeholder="User ID">
                <button @onclick="HandlePunch" class="bg-[#8C8C73] hover:bg-green-600 text-white font-bold rounded-md py-2 px-4 mt-4 transition duration-200">
                    Punch In/Out
                </button>
            </div>

            <div class="pt-6 border-t border-gray-200">
                <h2 class="text-gray-900 font-bold text-xl">Last Activity</h2>
                <p class="text-gray-700">Punched in at: @lastPunchIn</p>
                <p class="text-gray-700">Punched out at: @lastPunchOut</p>
            </div>
        </div>
    </div>
</div>

@code {
    string userId;
    string lastPunchIn;
    string lastPunchOut;

    protected override async Task OnInitializedAsync()
    {
        // Optionally, initialize userId from the user session or similar
    }

    async Task HandlePunch()
    {
        var (punchIn, punchOut) = await dbManager.GetLastActivityAsync(userId);

        if (punchIn.HasValue && !punchOut.HasValue)
        {
            // User is currently punched in, so punch them out.
            await dbManager.PunchOutAsync(userId);
        }
        else
        {
            // User is currently punched out, so punch them in.
            await dbManager.PunchInAsync(userId);
        }

        // Refresh the last activity display
        var lastActivity = await dbManager.GetLastActivityAsync(userId);
        lastPunchIn = lastActivity.punchIn?.ToString("g") ?? "N/A";
        lastPunchOut = lastActivity.punchOut?.ToString("g") ?? "N/A";
    }
}
